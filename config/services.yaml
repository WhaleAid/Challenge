# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

parameters:
    sendinblue_api_key: '%env(SENDINBLUE_API_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    




    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # SendinBlue\Client\Configuration:
        # factory: ['SendinBlue\Client\Configuration', 'getDefaultConfiguration']
        # calls:
        #     - [setApiKey, ['%sendinblue_api_key%']]
        # arguments:
        #     $key: '%env(SENDINBLUE_API_KEY)%'


    # SendinBlue\Client\Api\TransactionalEmailsApi:
    #     factory: ['SendinBlue\Client\ApiFactory', 'getTransactionalEmailsApi']
    #     arguments: ['@SendinBlue\Client\Configuration']

    # App\Services\SendinblueMailer:
    #     arguments:
    #         $transactionalEmailsApi: '@SendinBlue\Client\Api\TransactionalEmailsApi'
    App\Services\SendinblueMailer:
        class: App\Services\SendinblueMailer
        arguments:
            
            $sendinblueApiKey: '%env(resolve:SENDINBLUE_API_KEY)%'
